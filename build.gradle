plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "groovy"
    id 'idea'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.coupang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    querydsl.extendsFrom compileClasspath
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation("org.assertj:assertj-core:3.18.1")
    implementation 'org.codehaus.groovy:groovy'
    implementation 'junit:junit:4.12'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'com.querydsl:querydsl-apt:4.1.4'
    implementation 'com.querydsl:querydsl-jpa:4.1.4'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // mandatory dependencies for using Spock
    compile "org.codehaus.groovy:groovy:3.0.7"
    testCompile platform("org.spockframework:spock-bom:2.0-M4-groovy-3.0")
    testCompile "org.spockframework:spock-core"
    testCompile "org.spockframework:spock-junit4"

}

test {
    useJUnitPlatform()
}

ext {
    querydslSrcDir = 'src/main/generated'
    queryDslVersion = '4.1.4'
}

querydsl {
    library = "com.querydsl:querydsl-apt"
    querydslSourcesDir = 'src/main/generated'
    jpa = true
    querydslDefault = true
}

sourceSets {
    main {
        java {
            srcDirs += file(querydslSrcDir)
        }
    }
}

idea {
    module {
        generatedSourceDirs += file(querydslSrcDir)
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}